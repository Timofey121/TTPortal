services:
  postgres:
    image: postgres:14
    container_name: TTPortal
    environment:
      POSTGRES_DB: TTPortal
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d TTPortal" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-net

  eureka-service:
    build: ./eureka-service
    container_name: eureka-service
    ports:
      - "8761:8761"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/eureka/apps" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-net

  news-portal:
    build: ./newsPortal-service
    container_name: newsPortal-service
    ports:
      - "8763:8763"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/TTPortal
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:8761/eureka/
      - SPRING_EUREKA_CLIENT_REGISTERWITHEUREKA=true
      - SPRING_EUREKA_CLIENT_FETCHREGISTRY=true
      - EUREKA_CLIENT_INITIALINSTANCEINFOREPLICATIONINTERVALSECONDS=10
      - EUREKA_CLIENT_REGISTRYFETCHINTERVALSECONDS=10
    depends_on:
      postgres:
        condition: service_healthy
      eureka-service:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8763/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-net

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:8761/eureka/
      - SPRING_EUREKA_CLIENT_REGISTERWITHEUREKA=true
      - SPRING_EUREKA_CLIENT_FETCHREGISTRY=true
      - EUREKA_CLIENT_INITIALINSTANCEINFOREPLICATIONINTERVALSECONDS=10
      - EUREKA_CLIENT_REGISTRYFETCHINTERVALSECONDS=10
    depends_on:
      news-portal:
        condition: service_healthy  # Изменено на service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-net

networks:
  backend-net:
    driver: bridge